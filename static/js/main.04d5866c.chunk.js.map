{"version":3,"sources":["context.js","components/Task.js","components/Tasks.js","components/layout/TextInputGroup.js","components/AddTask.js","components/layout/Header.js","components/pages/About.js","components/Test/CompDidMount_Fetch.js","components/EditTask.js","components/pages/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Context","React","createContext","reducer","state","action","type","tasks","filter","task","id","payload","map","Provider","dispatch","setState","axios","get","result","this","data","value","props","children","Component","Consumer","Task","detailDropDown","delFunc","a","async","delete","console","log","title","location","detail","date","className","style","cursor","onClick","clickFunc","bind","float","color","to","marginRight","Tasks","TextInputGroup","label","name","placeholder","onChange","error","htmlFor","classnames","defaultProps","AddTask","errors","e","target","onSubmit","preventDefault","newTask","post","response","history","push","Header","href","About","Test","fetch","then","json","EditTask","match","params","updatedTask","put","NotFound","App","exact","path","component","CompDidMount_Fetch","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.04d5866c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\n\r\n//A reducer manipulates the page in accordance with the actions that it gets\r\n//Action object will be submitted as an argument to the reducer function.\r\n//This helps us determine what type of action is it, delete, add etc..\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.filter(task => task.id !== action.payload)\r\n        // payload is just some data we want to send along with our action object (in this case the task id)\r\n      };\r\n    case \"ADD_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: [action.payload, ...state.tasks]\r\n      };\r\n    case \"UPDATE_TASK\":\r\n      return {\r\n        ...state,\r\n        tasks: state.tasks.map(task =>\r\n          task.id === action.payload.id ? (task = action.payload) : task\r\n        )\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//This is where our state will be held for global scope\r\n//Since Provider extends component, we can use lifecycle methods inside it. SO instead of hardcoding the state\r\n//we will fetch data from the fake JSON API server\r\nexport class Provider extends Component {\r\n  state = {\r\n    tasks: [],\r\n    // tasks: [\r\n    //   {\r\n    //     id: 1,\r\n    //     title: \"Give Interview\",\r\n    //     location: \"London\",\r\n    //     detail: \"Kubrik consultants\",\r\n    //     date: \"2/5/2019\"\r\n    //   },\r\n    //   {\r\n    //     id: 2,\r\n    //     title: \"Do laundry\",\r\n    //     location: \"Laundromat across the road\",\r\n    //     detail: \"Price increased to $5\",\r\n    //     date: \"25/12/2019\"\r\n    //   },\r\n    //   {\r\n    //     id: 3,\r\n    //     title: \"Complete React Course\",\r\n    //     location: \"Home\",\r\n    //     detail: \"Traversy media course\",\r\n    //     date: \"31/12/2019\"\r\n    //   }\r\n    // ],\r\n\r\n    //Needed to call the action\r\n    dispatch: action => this.setState(state => reducer(state, action))\r\n  };\r\n\r\n  //Going to use 'axios' rather than 'fetch' for Getting data\r\n  // Initally this function was not async and await. But fetching data from server may induce delays of upto several seconds\r\n  //and we don't our program to wait until the data is received, rather do something in the meanwhile.\r\n  async componentDidMount() {\r\n    const result = await axios.get(\r\n      \"http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks\"\r\n    );\r\n    this.setState({ tasks: result.data });\r\n\r\n    // await axios\r\n    // .get(\"http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks\")\r\n    // .then(response => this.setState({ tasks: response.data }));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      //'value' is whatever we want to be available to our application\r\n      //Provider wraps around everything in the main application component i.e App.js\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\n//Consumer is used by any component that wants to access the state provided by the 'Provider' above\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Consumer } from \"../context\";\r\nimport axios from \"axios\";\r\n\r\nclass Task extends Component {\r\n  state = {\r\n    detailDropDown: true\r\n  };\r\n\r\n  clickFunc() {\r\n    this.setState({ detailDropDown: !this.state.detailDropDown });\r\n    console.log(\"Detail dd status is \" + this.state.detailDropDown);\r\n  }\r\n\r\n  delFunc = async (id, dispatch) => {\r\n    try {\r\n      //Initially we just had the dispactch statement here which only deleted from the DOM and not the\r\n      //Back end. Now using axios delete\r\n      await axios.delete(\r\n        `http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks/${id}`\r\n      );\r\n      dispatch({ type: \"DELETE_TASK\", payload: id });\r\n      //Since we extracted the dispatch function from the Context tag below, we can now call the dispatch function\r\n      // .then(result => dispatch({ type: \"DELETE_TASK\", payload: id }));\r\n    } catch (e) {\r\n      dispatch({ type: \"DELETE_TASK\", payload: id });\r\n    }\r\n    //If a new task is added and you try to delete it, it wouldn't be deleted because the new task is added to the DOM only\r\n    //and not the JSON placehilder DB. Remember, JSOB DB is a fake one where once created, cannot be changed by adding or\r\n    //deleting tasks. So this try and catch block is inserted: On try an error is produced as axios cannot find a task with that\r\n    //id in the fake DB hence, in catch we only fire a non axios dispatch to make changes in the DOM.\r\n    //In a normal App with real DB you wouldn't need to do this\r\n  };\r\n\r\n  render() {\r\n    const { id, title, location, detail, date } = this.props;\r\n    const { detailDropDown } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {/* Render something based on context value */}\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <div className=\"container\">\r\n                <h4>\r\n                  {/* Within the render method if another method located in the classs is to be called, 'this'.'method name' \r\n                is used to refer to it */}\r\n                  {title}\r\n                  <i\r\n                    className=\"fa fa-caret-down\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                    onClick={this.clickFunc.bind(this)}\r\n                  />\r\n                  <i\r\n                    className=\"fa fa-times\"\r\n                    style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                    onClick={this.delFunc.bind(this, id, dispatch)}\r\n                  ></i>\r\n                  <Link to={`contact/edit/${id}`}>\r\n                    <i\r\n                      className=\"fa fa-pencil\"\r\n                      style={{\r\n                        cursor: \"pointer\",\r\n                        color: \"orange\",\r\n                        float: \"right\",\r\n                        marginRight: \"1rem\"\r\n                      }}\r\n                    ></i>\r\n                  </Link>\r\n                </h4>\r\n                {detailDropDown ? (\r\n                  <ul className=\"list-group\">\r\n                    <li className=\"list-group-item\">{location}</li>\r\n                    <li className=\"list-group-item\">{detail}</li>\r\n                    <li className=\"list-group-item\">{date}</li>\r\n                  </ul>\r\n                ) : null}\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nTask.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  location: PropTypes.string.isRequired,\r\n  detail: PropTypes.string.isRequired,\r\n  date: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Task;\r\n","import React, { Component } from \"react\";\r\nimport Task from \"./Task\";\r\nimport { Consumer } from \"../context\";\r\n\r\nclass Tasks extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {/* This value comes from the context provider in contex.js i.e <Provider value='the stuff you want to be accessed (in our case the entire state)>  */}\r\n        {value => {\r\n          const { tasks } = value;\r\n          return (\r\n            <div>\r\n              <h1 className=\"display-4 mb-2\">\r\n                {/* Using span the text inside can be styled */}\r\n                <span\r\n                  className=\"text\r\n                -danger\"\r\n                >\r\n                  Task Manager\r\n                </span>\r\n              </h1>\r\n              {tasks.map(task => (\r\n                // Without the key, a warning is shown saying that each child should have a unique identifier\r\n                <Task\r\n                  id={task.id}\r\n                  title={task.title}\r\n                  location={task.location}\r\n                  detail={task.detail}\r\n                  date={task.date}\r\n                />\r\n              ))}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tasks;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nconst TextInputGroup = ({\r\n  //These are props\r\n  type,\r\n  label,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error\r\n}) => {\r\n  return (\r\n    <div className=\"form-group\">\r\n      {/* <label htmlFor=\"title\">Title</label>\r\n      <input\r\n        type=\"text\"\r\n        name=\"title\"\r\n        className=\"form-control\"\r\n        placeholder=\"Enter task...\"\r\n        value={title}\r\n        onChange={this.onChange}\r\n      /> */}\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        //We need conditional classnames, So in case we have an error in the text field we need to add the 'is-invalid'\r\n        //class to the error div below.  For this we use the module 'classnames'.\r\n        //form-control is the default class and the second argument in curly braces is the conditional class and the condition in which the class will be applied\r\n        className={classnames(\"form-control\", { \"is-invalid\": error })} //This is classnames syntax\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {<div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nTextInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nTextInputGroup.defaultProps = {\r\n  type: \"text\"\r\n};\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport TextInputGroup from \"./layout/TextInputGroup\";\r\nimport uuid from \"uuid\";\r\nimport axios from \"axios\";\r\n\r\nclass AddTask extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    detail: \"\",\r\n    date: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  onChange = e => this.setState({ [e.target.name]: [e.target.value] });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { title, location, detail, date } = this.state;\r\n\r\n    if (title === \"\") {\r\n      this.setState({ errors: { title: \"Title is required\" } });\r\n      return; //If there is an error, the onSubmit function will end here without submitting\r\n    }\r\n\r\n    if (date === \"\") {\r\n      this.setState({ errors: { date: \"Date is required\" } });\r\n      return;\r\n    }\r\n\r\n    const newTask = {\r\n      // JSON placeholder like most APIs/DB upon getting a POST will create the id for the posted object itself so uuid is not needed\r\n      // id: uuid(),\r\n      title,\r\n      location,\r\n      detail,\r\n      date\r\n    };\r\n\r\n    //axios post syntax (link to where to post, the object to post)\r\n    const response = await axios.post(\r\n      \"http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks\",\r\n      newTask\r\n    );\r\n    dispatch({ type: \"ADD_TASK\", payload: response.data });\r\n    //When you make a JSON POST request, it sends us the object we create back along with\r\n    //its id so in the dispatch payload we'll no longer be sending the newTask, instead we'll send JSON response data\r\n\r\n    this.setState({\r\n      title: \"\",\r\n      location: \"\",\r\n      detail: \"\",\r\n      date: \"\",\r\n      errors: {} //Ensures errors are cleareed on submit\r\n    });\r\n\r\n    // push allows for redirection\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { title, location, detail, date, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Add Task</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter task\"\r\n                    value={title}\r\n                    onChange={this.onChange}\r\n                    error={errors.title}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Location\"\r\n                    name=\"location\"\r\n                    placeholder=\"Enter task\"\r\n                    value={location}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Detail\"\r\n                    name=\"detail\"\r\n                    placeholder=\"Enter Details..\"\r\n                    value={detail}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Date\"\r\n                    name=\"date\"\r\n                    placeholder=\"Date\"\r\n                    value={date}\r\n                    onChange={this.onChange}\r\n                    error={errors.date}\r\n                  />\r\n\r\n                  {/* <label htmlFor=\"title\">Title</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"title\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Enter task...\"\r\n                      value={title}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <label htmlFor=\"location\">Location</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"location\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Location...\"\r\n                      value={location}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <label htmlFor=\"detail\">Detail</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"detail\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Details...\"\r\n                      value={detail}\r\n                      onChange={this.onChange}\r\n                    />\r\n                    <label htmlFor=\"date\">Date</label>\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"date\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Date...\"\r\n                      value={date}\r\n                      onChange={this.onChange}\r\n                    /> */}\r\n                  <input type=\"submit\" value=\"Add Task\" className=\"btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddTask;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = props => {\r\n  const { title } = props;\r\n  return (\r\n    // <div>\r\n    //   <h1>{title}</h1>\r\n    // </div>\r\n    <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark py-3 mb-3\">\r\n      <div className=\"container\">\r\n        <a href=\"/\" className=\"navbar-title\">\r\n          {title}\r\n        </a>\r\n        <div>\r\n          <ul className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              {/* Better to use Link rather than a tag */}\r\n              <Link to=\"/\" className=\"nav-link\">\r\n                <i className=\"fa fa-home\" />\r\n                Home\r\n              </Link>\r\n              {/* <a href=\"/\" className=\"navLink\">\r\n                Home\r\n              </a> */}\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/about\" className=\"nav-link\">\r\n                <i className=\"fa fa-question\" />\r\n                About\r\n              </Link>\r\n            </li>\r\n\r\n            <li className=\"nav-item\">\r\n              <Link to=\"/task/add\" className=\"nav-link\">\r\n                <i\r\n                  className=\"fa fa-plus\"\r\n                  style={{ color: \"green\", cursor: \"pointer\" }}\r\n                ></i>\r\n              </Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: \"First React App\"\r\n};\r\n\r\nHeader.propTypes = {\r\n  title: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple App to manage tasks</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nexport default class Test extends Component {\r\n  state = {\r\n    title: \"\",\r\n    id: \"\",\r\n    location: \"\",\r\n    date: \"\",\r\n    id: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    //We can send a GET request through fetch or axios. Here we do a fetch but in context.js we'll use axios\r\n    fetch(\r\n      \"http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks/1\"\r\n    )\r\n      .then(response => response.json()) //The response from the link is mapped to json\r\n      .then(data =>\r\n        this.setState({\r\n          title: data.title,\r\n          location: data.location,\r\n          detail: data.detail,\r\n          date: data.date,\r\n          id: data.id\r\n        })\r\n      );\r\n    console.log(this.state.location);\r\n    //THe mapped response is logged onto the console\r\n  }\r\n\r\n  render() {\r\n    const { title, location, date, id } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>{id}</h1>\r\n        <h1>{title}</h1>\r\n        <h1>{location}</h1>\r\n        <h1>{date}</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../context\";\r\nimport TextInputGroup from \"./layout/TextInputGroup\";\r\nimport axios from \"axios\";\r\n\r\nclass EditTask extends Component {\r\n  state = {\r\n    id: \"\",\r\n    title: \"\",\r\n    location: \"\",\r\n    detail: \"\",\r\n    date: \"\",\r\n    errors: {}\r\n  };\r\n\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const response = await axios.get(\r\n      `http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks/${id}`\r\n    );\r\n    const task = response.data;\r\n    this.setState({\r\n      title: task.title,\r\n      location: task.location,\r\n      detail: task.detail,\r\n      date: task.date\r\n    });\r\n  }\r\n\r\n  onChange = e => this.setState({ [e.target.name]: [e.target.value] });\r\n\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { title, location, detail, date } = this.state;\r\n\r\n    if (title === \"\") {\r\n      this.setState({ errors: { title: \"Title is required\" } });\r\n      return; //If there is an error, the onSubmit function will end here without submitting\r\n    }\r\n\r\n    if (date === \"\") {\r\n      this.setState({ errors: { date: \"Date is required\" } });\r\n      return;\r\n    }\r\n\r\n    const { id } = this.props.match.params;\r\n\r\n    const updatedTask = {\r\n      title,\r\n      location,\r\n      detail,\r\n      date\r\n    };\r\n    const response = await axios.put(\r\n      `http://my-json-server.typicode.com/Maaz046/REACT_Task-Manager/tasks/${id}`,\r\n      updatedTask\r\n    );\r\n\r\n    dispatch({ type: \"UPDATE_TASK\", payload: response.data });\r\n\r\n    this.setState({\r\n      title: \"\",\r\n      location: \"\",\r\n      detail: \"\",\r\n      date: \"\",\r\n      errors: {} //Ensures errors are cleareed on submit\r\n    });\r\n\r\n    // push allows for redirection\r\n    this.props.history.push(\"/\");\r\n  };\r\n\r\n  render() {\r\n    const { title, location, detail, date, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {value => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">Edit Task</div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Title\"\r\n                    name=\"title\"\r\n                    placeholder=\"Enter task\"\r\n                    value={title}\r\n                    onChange={this.onChange}\r\n                    error={errors.title}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Location\"\r\n                    name=\"location\"\r\n                    placeholder=\"Enter task\"\r\n                    value={location}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Detail\"\r\n                    name=\"detail\"\r\n                    placeholder=\"Enter Details..\"\r\n                    value={detail}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  <TextInputGroup\r\n                    label=\"Date\"\r\n                    name=\"date\"\r\n                    placeholder=\"Date\"\r\n                    value={date}\r\n                    onChange={this.onChange}\r\n                    error={errors.date}\r\n                  />\r\n\r\n                  <input type=\"submit\" value=\"Update\" className=\"btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditTask;\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">\r\n        <span className=\"text-danger\">404</span>\r\n        Not Found\r\n      </h1>\r\n      <p>What a bummer</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport Tasks from \"./components/Tasks\";\n//BrowserRouter is the parent component holding all routes, it is given the alias of Router.\n//Route holds all routes and Switch allows us to hold a default not found page etc\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport AddTask from \"./components/AddTask\";\nimport Header from \"./components/layout/Header\";\nimport About from \"./components/pages/About\";\n// import Test from \"./components/Test/Test\";\nimport CompDidMount_Fetch from \"./components/Test/CompDidMount_Fetch\";\nimport EditTask from \"./components/EditTask\";\n\nimport { Provider } from \"./context\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\nimport NotFound from \"./components/pages/NotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          {/* Header is a functional component and it has been passed a prop i.e \"title\". The prop value is processed in the Header.js class which created a navbar \n        and display the title value as the page header. */}\n          <Header title=\"Task Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Tasks} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/task/add\" component={AddTask} />\n              {/* <Route exact path=\"/test\" component={Test} /> */}\n              <Route exact path=\"/test\" component={CompDidMount_Fetch} />\n              <Route exact path=\"/contact/edit/:id\" component={EditTask} />\n              {/* As long as component name is NotFound, the path doesn't need to be defined as a default is already associaed with this name \n                  Make sure to put the NotFound Route at the end since Routes are looked up sequentially and all others beneath it will be ignored*/}\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}